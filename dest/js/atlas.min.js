// CONSTANTS
// *****************************************************************************

var tTableStartPerformance = performance.now();

const table = $('#orgs');
// const tableCols = [
//     "Organizations",
//     // "Organization",
//     "State",
//     "Collaborations",
// ];
const tableCols = [
    "organization_name",
    "collaboration_type",
    "issues",
    "active",
    "contact",
    //"organization_list"
];

const tableColumnTitles = [
    "Collaborations",
    "Collaboration Type",
    "Key Issues",
    "Active Status",
    "Contact",
    //"Member Organizations"
];

_collab_data = {};
_selected_collab_list = [];
sessionStorage.clear();

// Map Interface Code
var home = new google.maps.LatLng(42.380753, -71.110272);
var map;
var _markers = [];
var _bounds = new google.maps.LatLngBounds();
var infowindow = new google.maps.InfoWindow({
    content: ''
});

// INIT ******************************************
getFirebaseCollaborationData();
createTableHeader();

// SEARCH TEXT BOX CHANGE
$(".filter").keypress(function(e) {
    if (e.which == 13) {
        refreshTableData($(this).val());
    }
});

function hydrateView() {
    console.log('hydrateView');
    loadSearchFilters();
    refreshTableData('');
}

function getSelectedTableFilters() {
    console.log('getSelectedTableFilters');
    var filters = [];
    for (var index in tableCols) {
        var selectedValues = $('select#' + tableCols[index]).val();
        if (selectedValues && selectedValues.length > 0) {
            filters[index] = selectedValues;
        }
    }
    return filters;
}


function filterData(filters) {
    console.log('filterData');
    var filteredRecords = {};
    _selected_collab_list = [];

    if (filters) {
        for (var key in _collab_data) {
            var row = _collab_data[key];
            // Check filters
            var addToDisplay = true;
            for (var i in filters) {

                if (filters[i] && filters[i].length > 0) {
                    var result = (filters[i].includes(row[tableCols[i]]));
                    for (var j in filters[i]) {
                        if (row[tableCols[i]].includes(filters[i][j])) {
                            console.log((row[tableCols[i]], filters[i][j]))
                            result = true;
                            break
                        }
                    }
                    if (result === false) {
                        addToDisplay = false;
                        break;
                    }
                }
            }
            if (addToDisplay) {
                filteredRecords[key] = row;
                _selected_collab_list.push(key);
            }
        }
    }
    return [filteredRecords, _selected_collab_list];
}
// LOAD TABLE
// *****************************************************************************
function refreshTableData(query) {
    console.log('refreshTableData');
    // note: query param was never used! TODO?
    // Filter data on query, show first 10.

    $("tbody tr").remove();
    // createTableHeaders();

    var filters = getSelectedTableFilters();
    var filteredData = filterData(filters);
    var recordsToDisplay = filteredData[0];
    var _selected_collab_list = filteredData[1];

    createTableBody(recordsToDisplay);
    
    displayMap();
    var ref = new Firebase('https://atlas-new-format.firebaseio.com/organizations');
    organization_list = "";
    console.log(_selected_collab_list);
    if (_selected_collab_list.length <= 5) {
        ref.once("value").then(function(snapshot) {
        for (record in snapshot.val()) {
            var addToList = false;
            for (c in _selected_collab_list) {
                if (snapshot.child(record).child("collaboration_links").val().includes(c)) {
                    addToList = true;
                }
            }
            if (addToList) {
                organization_list += snapshot.child(record).child("organization_name").val() + "|" + snapshot.child(record).key() + "||";
            }
        }
        getAddOrganizationMapMarkers(organization_list);
        });
    }
    // var rows = document.getElementsByTagName("tr").length;
    // var msg = ' entries';
    // if(rows === 1) {
    //     msg = ' entry';
    // }
    // $('#row-count').html(rows + msg);

    jQuery(document).ready(function($) {

        var tEnd = performance.now();
        console.log("from start to ready took " + (tEnd - tTableStartPerformance) + " milliseconds.")

        // $("tr").click(function() {
        //     console.log($(this).attr('id'));
        //     window.location = "http://www.sciencepolicyatlas.com/organization?org=" + $(this).attr('id');
        // });
    });


        var getUrlParameter = function getUrlParameter(sParam) {
        var sPageURL = decodeURIComponent(window.location.search.substring(1)),
            sURLVariables = sPageURL.split('&'),
            sParameterName,
            i;

        for (i = 0; i < sURLVariables.length; i++) {
            sParameterName = sURLVariables[i].split('=');

            if (sParameterName[0] === sParam) {
                return sParameterName[1] === undefined ? true : sParameterName[1];
            }
        }
    };
}

function getRecord(name) {
    console.log('getRecord');
    var ref = new Firebase('https://atlas-new-format.firebaseio.com/collaborations');

    ref.orderByChild('organization_name').startAt(name).endAt(name).once('value', function(snapshot) {
        snapshot.forEach(function(childSnapshot) {

            var key = childSnapshot.key();
            var data = childSnapshot.val();

            console.log(data);
            var v = "http://www.sciencepolicyatlas.com/collaboration?collab=" + key;;
            console.log(v);
            if (data) {
                window.location = "http://www.sciencepolicyatlas.com/collaboration?collab=" + key;
            }
        });
    });
    return;

    // $.ajax({
    //     type: "GET",
    //     dataType: "jsonp",
    //     data: JSON.stringify(name),
    //     url: "https://atlas-new-format.firebaseio.com/organizations/.json?",
    // https://atlas-organizations.firebaseio.com/.json",
    // ?orderBy=\"organizations\"",
    //     success: function(data) {
    //         if(data) {
    //             window.location = "http://www.sciencepolicyatlas.com/organization?org=" + data;
    //         }
    //        // hydrateView();

    //     }
    // });
}

function createTableBody(list) {
    console.log('createTableBody');
    // Add the header first
    //  console.log(list);
    var count = 0;
    for (var pos in list) {
        table.find('tbody:last').append(createTableRow(pos, list[pos]));
        ++count;
    }
    var msg = " collaborations match these search results. See ";
    msg += '<a target="_top" href="http://www.sciencepolicyatlas.com/" style = "color: #ffffff">' + "tips" + "</a>";
    msg += " for leveraging the Atlas.";
    if(count === 1) {
        msg = " collaboration matches these search results. See" + '<a target="_top" href="http://www.sciencepolicyatlas.com/" style = "color: #ffffff">' + "tips" + "</a>" + "for leveraging the Atlas.";
    }
    $('#row-count').html(count + msg);  
}

function createTableRow(id, collab) {
    console.log('createTableRow');

    var string = "<tr id='" + id + "'>";
    for (var i in tableCols) {
        var column = tableCols[i];

        string += "<td class=" + column + " nocase>";
        if (column == "random_var") { //REQUIRES FIXING
            var orgs = collab.participation_membership_in_collaboration ? collab.participation_membership_in_collaboration.split("||") : ""; //col].split(", ");

            for (var i in orgs) {

                var org = orgs[i];

                var org_key = org ? org.split(" | ") : "";
                for (kv in org_key) {

                    if (i > 0) {
                        string += ", ";
                    }
                    var k = org_key[1];
                    var name = org_key[0];
                    k = k.trim();
                    name = name.trim();
                    // console.log(k);
                    // console.log(name);
                    string += "<a target=\"_top\" href=\"http://www.sciencepolicyatlas.com/organization?org=" + k + "\">" + name + "</a>";
                    break;
                }
                //if (i > 0) {
                //   string += ", ";
                //}
                //var collab = collabs[i];
                //string += "<a href=\"http://www.sciencepolicyatlas.com/collaboration?collab=" + collab + "\">" + collab + "</a>";
            }
        } else if (column == 'organization_name') {
            string += "<a target=\"_top\" href=\"http://www.sciencepolicyatlas.com/collaboration?collab=" + id + "\">" + collab[column] + "</a>";
        }
        // if(col == "Organizations") {
        //     string += org.organization_name ? org.organization_name : 'empty';
        // } 
        // if(col == "State") {
        //     string += org.state ? org.state : 'empty';
        // }
        else {
            string += collab[column];
        }
        string += "</td>\n";
    }
    return string;
}

function createTableHeader() {
    console.log('createTableHeader');
    var string = "<tr>";
    for (var i = 0; i < tableColumnTitles.length; i++) {
        string += "<th>" + tableColumnTitles[i] + "</th>";
    }
    string += "</tr>";
    table.find('thead').append(string);
}

function getsessionStorage() {
    var d = sessionStorage.getItem('data');
    var data = JSON.parse(d);
    return data;
}

function setsessionStorage(data) {
    if (data) {
        var dataToStore = JSON.stringify(data);
        sessionStorage.setItem('data', dataToStore);
    }
}

function getFirebaseCollaborationData() {
    var tTableStartPerformance = performance.now();
    var sData = getsessionStorage();
    if (sData) {
        _collab_data = sData;
        hydrateView();

        var pn = performance.now();
        console.log("hydrateView using session data took " + (pn - tTableStartPerformance) + " milliseconds.")
        return;
    }

    console.log('getFirebaseCollaborationData');
    $.ajax({
        type: "GET",
        dataType: "jsonp",
        url: "https://atlas-new-format.firebaseio.com/collaborations/.json",
        success: function(data) {
            _collab_data = data;
            var tEnd = performance.now();
            console.log("getFirebaseCollaborationData took " + (tEnd - tTableStartPerformance) + " milliseconds.")
            hydrateView();
            var tEnd2 = performance.now();
            console.log("hydrateView took " + (tEnd2 - tEnd) + " milliseconds.")
            setsessionStorage(_collab_data);
        }
    });
}

// LOAD TABLE
// *****************************************************************************
function loadSearchFilters() {
    console.log('loadSearchFilters');
    for (var i in tableCols) {
        createFilterFor(tableCols[i]);
    }
    $(".chosen-select").chosen().change(function(evt, params) {
        refreshTableData($(".filter").val());
    });
}

function asc(s1, s2) {
    var s1lower = s1.toLowerCase();
    var s2lower = s2.toLowerCase();
    return s1lower > s2lower ? 1 : (s1lower < s2lower ? -1 : 0);
}

function desc(s1, s2) {
    var s1lower = s1.toLowerCase();
    var s2lower = s2.toLowerCase();
    return s1lower < s2lower ? 1 : (s1lower > s2lower ? -1 : 0);
}



function sortIt(dropdownkey) {
    var id = '#' + dropdownkey;
    var theOptions = $(id + " option");
    if (theOptions.length > 0) {

        // var my_options = $("#my-dropdown option");
        theOptions.sort(function(a, b) {
            if (a.text > b.text) return 1;
            else if (a.text < b.text) return -1;
            else return 0
        })
        $(id).empty(); //.append(theOptions);
        $(id).chosen({ no_results_text: "No results matched" });

        //  var o = $(id).hasClass('asc') ? 'desc' : 'asc';
        //  $(id).removeClass('asc').removeClass('desc');
        //  $(id).addClass(o);
        //  var asc = o === 'asc';

        //     theOptions.sort(function(a,b) {
        //     var aa = a.text;
        //     var bb = b.text;
        //     var alower = aa.toLowerCase();
        //     var blower = bb.toLowerCase();

        //     if(asc) {
        //         return alower > blower? 1 : (alower < blower? -1 : 0);
        //     } else {
        //         return alower < blower? 1 : (alower > blower? -1 : 0);
        //     }
        // });

        // $(id).empty();
        // var string = '';//<select id="' + dropdownkey + '" class="chosen-select" multiple="' + theOptions.length + '">';
        //  for (var i = 0; i < theOptions.length; i++) {
        //    string += '<option value="' + theOptions[i] + '">' + theOptions[i] + '</option>';
        // }
        // string += '</select>';
        //$(id).append(string);
    }
}

function createFilterFor(key) {
    console.log('createFilterFor');
    var options = [];
    for (var collab in _collab_data) {

        // multiple collaborations on one line comma delimited
        var values = _collab_data[collab][key] ? _collab_data[collab][key].split(", ") : "";

        if (values.length > 0) {
            for (var n in values) {
                var value = values[n];
                value = value.trim();

                // collaborations have a key, don't display it
                if (value.indexOf('|') > -1) {
                    value = value.substr(0, value.indexOf('|'));
                }
                // already in filter?
                if ($.inArray(value, options) === -1) {
                    options.push(value);
                }
            }
        }
    }

    if (key === 'organization_list') {
        options.sort(desc);
    } else {
        options.sort(asc);
    }

    // var string = '<button onclick="sortIt(\'' + key + '\')">sort</button><select id="' + key + '" class="chosen-select" multiple="' + options.length + '">'; 
    var string = '<select id="' + key + '" class="chosen-select" multiple="' + options.length + '">';

    for (var i = 0; i < options.length; i++) {
        string += '<option value="' + options[i] + '">' + options[i] + '</option>';
    }
    string += '</select>';
    $("#options").append(string);

    var l = key.indexOf('_') > -1 ? key.indexOf('_') : key.length;
    //var placeHolder = key.substr(0, l);

    //placeHolder = placeHolder.charAt(0).toUpperCase() + placeHolder.substr(1);

    for (var i = 0; i < tableCols.length; i++) {
        if (tableCols[i] == key) {
            var placeHolder = tableColumnTitles[i]
        }
    }

    $("#" + key).chosen({
        no_results_text: "Oops, nothing found!",
        width: "90%",
        allow_single_deselect: true,
        placeholder_text_multiple: placeHolder,
    });

}

// Map Interface Code
var home = new google.maps.LatLng(42.380753, -71.110272);
var map;
var _markers = [];
var _bounds = new google.maps.LatLngBounds();
var infowindow = new google.maps.InfoWindow({
    content: ''
});

$(window).load(function() {
    var getUrlParameter = function getUrlParameter(sParam) {
        var sPageURL = decodeURIComponent(window.location.search.substring(1)),
            sURLVariables = sPageURL.split('&'),
            sParameterName,
            i;

        for (i = 0; i < sURLVariables.length; i++) {
            sParameterName = sURLVariables[i].split('=');

            if (sParameterName[0] === sParam) {
                return sParameterName[1] === undefined ? true : sParameterName[1];
            }
        }
    };
    
    displayMap();
});

function hydrateOrganizationLinksElement(id, data) {
    if (id) {
        var value = '';
        testForIdInView(id);
        if (value === '') {
            var links = data.split("||");
            for (var i = 0; i < links.length; ++i) {

                var link = String(links[i]);
                var name_key = link ? link.split("|"): "";
                if (name_key.length >= 2) {
                    var name = name_key[0];
                    var key = name_key[1];

                    name = name.trim();
                    key = key.trim();
                    if (name.length > 0 && key.length > 0) {
                        if (value.length > 0) {
                            value += ', ';
                        }
                        var link = '<a href="http://www.sciencepolicyatlas.com/organization?org=' + key + '/" target="_blank">' + name + '</a>';
                        value += link;
                    }
                }
            }
        }
        if (value.length > 0) {
            $('#' + id).append('<span>' + value + '</span>');
        } else {
            $('#' + id).parent().addClass('my-hide');
            console.log('hiding ' + id);
        }
    }
}

function testForIdInView(id) {
    var e = $('#' + id);
    if (e.length < 1) {
        console.log('ID ' + id + ' not found in the view');
    }
}

function createDownLoadLink(data) {
    //return '<strong><a href="' + data.downloadURL + '" download>' + data.name.replace(/\.[^/.]+$/, "") + '</a>, (' + data.upload_date + ') - ' + data.category + '</strong><br>';
    var v = '<strong><a href="' + data.downloadURL + '" download>' + data.name.replace(/\.[^/.]+$/, "") + '</a>, (' + data.upload_date + ')';
    if (data.category.length > 0) {
        v += ' - ' + data.category;
    }
    if (data.filetype && data.filetype.length > 0) {
        v += ' - ' + data.filetype;
    }
    v += '</strong><br>';
    return v;
}

function getRecordResources(key, id, callback) {
    $.ajax({
        type: "GET",
        dataType: "jsonp",
        url: "https://atlas-new-format.firebaseio.com/resources/" + key + "/.json?",
        success: function(data) {
            callback(id, data);
        }
    });
}
  
// Create a server request.
function getOrganizationDatabase(key) {
    organization_list = "";
    var thisKey = key;
    $.ajax({
        type: "GET",
        dataType: "jsonp",
        url: "https://atlas-new-format.firebaseio.com/organizations/.json",
        complete: function(data) {
            _collab_data = data;
            //for (var org in _data) {
                //if (_data[org]["collaboration_links"].includes(thisKey)) {
                    //organization_list += _data[org]["organization_name"] + "|" + _data[org] + "||";
                //}
            //}
        }
    });
}
  
// Create a server request.
function getCollaborationData(key, callback) {
    var thisKey = key;
    $.ajax({
        type: "GET",
        dataType: "jsonp",
        url: "https://atlas-new-format.firebaseio.com/collaborations/" + key + "/.json?",
        success: function(data) {
            if (data) {
                data['key'] = thisKey;
                callback(data);
            }
        }
    });
}

function getOrganizationData(key, callback) {
    var thisKey = key;
    $.ajax({
        type: "GET",
        dataType: "jsonp",
        url: "https://atlas-new-format.firebaseio.com/organizations/" + key + "/.json?",
        success: function(data) {
            if (data) {
                data['key'] = thisKey;
                callback(data);
            }
        }
    });
}

$(document).ajaxStop(function() {
    console.log('Triggered ajaxStop handler. fit map markers');
    fitAllMapMarkers();
  // hide map if we do not have addresses
    //if( _markers.length === 0) {
        //$('#my-map').addClass('my-hide');
    //}
});

function fitAllMapMarkers() {
    for (var i = 0; i < _markers.length; i++) {
        _bounds.extend(_markers[i].getPosition());
    }
    if (_markers.length > 0) {
        map.fitBounds(_bounds);
    }
}

function getGeolocationAddMapMarker(record) {
    if (record && record.geolocation && record.geolocation.length > 0) {
        var urll = "https://maps.googleapis.com/maps/api/geocode/json?address=" + record.geolocation + "&key=AIzaSyDplsTlpTuCS-MBQggxOf0iNloTP-OBOIE";
        $.getJSON(urll).done(function() {
            var r = record;
            return function(data) {
                if (data.status === google.maps.GeocoderStatus.OK) {
                    var v = {
                        record: r,
                        latlng: data.results[0].geometry.location
                    };
                    addMapMarker(v);
                } else {
                    console.log('Geocode was not successful for the following reason: ' + status);
                }
            };
        }());
    }
}

function createMapInfoContent(data) {
    var content = '';

    if (data && data.record) {
        var l = Math.min(data.record.about.length, 70);
        var about = data.record.about.substring(0, l) + '...';
        var lSpace = about.lastIndexOf(' ');

        if (lSpace > 0) {
            about = about.substring(0, lSpace) + '...';
        }
        content = '<div id="content">' + '<div><h4>' + data.record.organization_name + '</h4><p>' + about + '</p><p><a href="http://www.sciencepolicyatlas.com/collaboration?collab=' + data.record.key + '/" target="_blank">Learn more</a>' + '</p>';
    }
    return content;
}

function displayMap() {
    // also add science policy marker.
    // if no other map info it will be centered on science policy (home)
    var mapOptions = {
        zoom: 10,
        // mapTypeId: 'satellite',
        center: home
    };

    map = new google.maps.Map(document.getElementById('my-map'),
        mapOptions);

    var title = 'Science Policy Atlas';
    var marker = new google.maps.Marker({
        position: home,
        map: map,
        // icon: google.maps.SymbolPath.CIRCLE,
        title: title,
        animation: google.maps.Animation.DROP
    });
    // _markers.push(marker);
    var infoContent = '<div id="content"><h4>' + title + '</h4><p>The Atlas seeks to serve as a key resource for government relations professionals </p><a href=\"http://www.sciencepolicyatlas.com\" target=\"_blank\">Learn more...</a></div>';

    bindContentToInfoWindow(marker, map, infowindow, infoContent);
    addFusionTableLayer(map);
}

function addFusionTableLayer(map) {
    congressionalDistricts = new google.maps.FusionTablesLayer({
        query: {
            select: 'col5',
            from: '1QlQxBF17RR-89NCYeBmw4kFzOT3mLENp60xXAJM'
        },
        map: map
    });
}

function addMapMarker(data) {
    if (data) {
        var title = data.record.organization_name;
        var infoContent = createMapInfoContent(data);
        var marker = new google.maps.Marker({
            position: data.latlng,
            map: map,
            title: title,
            label: data.record.organization_category[0],
            animation: google.maps.Animation.DROP
        });
        _markers.push(marker);
        bindContentToInfoWindow(marker, map, infowindow, infoContent);
    }
}
  
function getAddOrganizationMapMarkers(data) {
    var value = '';
    if (data) {
        var links = data.split("||");
        for (var i = 0; i < links.length; ++i) {

            var link = links[i];
            var name_key = link ? link.split("|") : "";
            if (name_key.length > 0) {
                var key = name_key[1];
                key = key.trim();
                if (key.length > 0) {
                    getOrganizationData(key, getGeolocationAddMapMarker);
                }
            }
        }
    }
}

// binds a map marker and infoWindow together on click event
function bindContentToInfoWindow(marker, map, infowindow, infoContent) {
    google.maps.event.addListener(marker, 'click', function() {
        infowindow.setContent(infoContent);
        infowindow.open(map, marker);
    });
}
